<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>JS Bin</title>
</head>
<body>
  <ul>
    <li id="item1">选项1</li>
    <li id="item2">选项2</li>
    <li id="item3">选项3</li>
    <li id="item4">选项4</li>
    <li id="item5">选项5</li>
  </ul>
</body>
</html>


function getSiblings(node){
  var allChildren=node.parentNode.children
  
    var array={length:0}
    for(i=0;i<allChildren.length;i++){
    if(allChildren[i]!==node){
      array[array.length]=allChildren[i]
      array.length+=1
    }
  }  
  return array
}
console.log(getSiblings(item3))


  function addClass(node,classes){

    for(let key in classes){
      var value=classes[key]
      if(value){
         node.classList.add(key)
       }else{
        node.classList.remove(key)
    }
   }
 }
addClass(item3,{a:true,b:false,c:true})



/**

function getSiblings(node){
  var allChildren=node.parentNode.children
  
    var array={length:0}
    for(i=0;i<allChildren.length;i++){
    if(allChildren[i]!==node){
      array[array.length]=allChildren[i]
      array.length+=1
    }
  }  
  return array
}

  function addClass(node,classes){

    for(let key in classes){
      var value=classes[key]
      var methodName=value?'add':'remove'
      /**console.log(methodName)
      console.log(node.classList)
      console.log(node.classList.add)
      console.log(node.classList[methodName])**/
        node.classList[methodName](key)
        
   }
 }
window.ffdom={}
ffdom.getSiblings=getSiblings
ffdom.addClass=addClass

ffdom.getSiblings(item3)
ffdom.addClass(item3,{a:true,b:false,c:true})
**/


window.ffdom={}
ffdom.getSiblings=function (node){
  var allChildren=node.parentNode.children
  
    var array={length:0}
    for(i=0;i<allChildren.length;i++){
    if(allChildren[i]!==node){
      array[array.length]=allChildren[i]
      array.length+=1
    }
  }  
  return array
}
ffdom.addClass=  function (node,classes){ 
    classes.forEach( (value)=>node.classList.add(value))
 }

ffdom.getSiblings(item3)
ffdom.addClass(item3,['a','b','c'])


Node.prototype.getSiblings=function(){
  var allChildren=this.parentNode.children
  
    var array={length:0}
    for(i=0;i<allChildren.length;i++){
    if(allChildren[i]!==this){
      array[array.length]=allChildren[i]
      array.length+=1
    }
  }  
  return array
}
Node.prototype.addClass=function(classes){
  classes.forEach( (value)=>this.classList.add(value))
}
item3.getSiblings()//this在调用的时候就会把item3传入
item3.addClass(['a','b','c'])

window.Node2=function(node){
  return{
    getSiblings:function(){
      var allChildren=node.parentNode.children 
      var array={length:0}
       for(let i=0;i<allChildren.length;i++){
       if(allChildren[i]!==node){
         array[array.length]=allChildren[i]
         array.length+=1
       }
     }  
     return array
   },
    addClass:function(classes){
      classes.forEach( (value)=>node.classList.add(value))
    }
  }
}
var node2=Node2(item3)
node2.getSiblings()
node2.addClass(['a','b','c'])


window.jQuery=function(node){
  return{
    getSiblings:function(){
      var allChildren=node.parentNode.children 
      var array={length:0}
       for(let i=0;i<allChildren.length;i++){
       if(allChildren[i]!==node){
         array[array.length]=allChildren[i]
         array.length+=1
       }
     }  
     return array
   },
    addClass:function(classes){
      classes.forEach( (value)=>node.classList.add(value))
    }
  }
}
var node2=jQuery(item3)//传item3
node2.getSiblings()
node2.addClass(['a','b','c'])

jQuery接受一个旧的节点，返回一个新的对象。return{key:value},返回值是个哈希。如果jq传的是选择器，就按照选择器找到对应的元素。

window.jQuery=function(nodeOrSelector){
  let node
  if(typeof nodeOrSelector==='string' ){
    node =document.querySelector(nodeOrSelector)
  }else{
    node=nodeOrSelector
  }
  return{
    getSiblings:function(){
      var allChildren=node.parentNode.children 
      var array={length:0}
       for(let i=0;i<allChildren.length;i++){
       if(allChildren[i]!==node){
         array[array.length]=allChildren[i]
         array.length+=1
       }
     }  
     return array
   },
    addClass:function(classes){
      classes.forEach( (value)=>node.classList.add(value))
    }
  }
}
var node2=jQuery('#item3')
node2.getSiblings()
node2.addClass(['red','b','c'])

.red{
  color:red;
}



window.jQuery=function(nodeOrSelector){
  let node
  if(typeof nodeOrSelector==='string' ){
    node =document.querySelector(nodeOrSelector)
  }else{
    node=nodeOrSelector
  }
  return{
    getSiblings:function(){
      var allChildren=node.parentNode.children 
      var array={length:0}
       for(let i=0;i<allChildren.length;i++){
       if(allChildren[i]!==node){
         array[array.length]=allChildren[i]
         array.length+=1
       }
     }  
     return array
   },
    addClass:function(classes){
      classes.forEach( (value)=>node.classList.add(value))
    }
  }
}
var node2=jQuery('ul>li:nth-child(3)')
node2.getSiblings()
node2.addClass(['red','b','c'])
***********************

window.jQuery=function(nodeOrSelector){
  let nodes={}
  if(typeof nodeOrSelector==='string'){
    let temp=document.querySelectorAll(nodeOrSelector)//伪数组
    for(let i=0;i<temp.length;i++){
      nodes[i]=temp[i]
    }
    nodes.length=temp.length
  }else if(nodeOrSelector instanceof Node){
    
    nodes={0:nodeOrSelector,length:1}
  }
  nodes.getSiblings=function(){
        
  }
  nodes.addClass=function(classes){
    classes.forEach( (value)=>{
      for(let i=0;i<nodes.length;i++){
        nodes[i].classList.add(value)
      }
   
    })
  }
  return nodes
}
var node2=jQuery('ul>li')
node2.addClass(['red'])
**********************************

window.jQuery=function(nodeOrSelector){
  let nodes={}
  if(typeof nodeOrSelector==='string'){
    let temp=document.querySelectorAll(nodeOrSelector)//伪数组
    for(let i=0;i<temp.length;i++){
      nodes[i]=temp[i]
    }
    nodes.length=temp.length
  }else if(nodeOrSelector instanceof Node){
    
    nodes={0:nodeOrSelector,length:1}
  }
  nodes.getSiblings=function(){
        
  }
  nodes.addClass=function(classes){
    classes.forEach( (value)=>{
      for(let i=0;i<nodes.length;i++){
        nodes[i].classList.add(value)
      }
   
    })
  }
  nodes.text=function(text){
    if(text===undefined){
      var texts=[]
      for(let i=0;i<nodes.length;i++){
      texts.push(nodes[i].textContent)
    }
    return texts
  }else{
     for(let i=0;i<nodes.length;i++){
      nodes[i].textContent=text
    }
  }
}
  return nodes
}
var node2=jQuery('ul>li')
node2.addClass(['red'])
node2.text('hi')